var x;                  // переменная - это символическое имя некоторого значения
                        // переменные объявляются с помощью ключевого слова var
var x = 0;              // присваивать значения переменным можно с помощью знака =
                        // в выражениях имя переменной замещается ее значением

// JavaScript поддерживает значения различных Типов Данных
x = 1;                   // Числа
x = 0.01;                // Строки
x = "Hello world";       // Строки текста в кавычках
x = 'JavaScript';        // Строки можно также заключать апострофы
x = true;                // Логическое значение
x = false;               // Другое логическое значение
x = null;                // Особое значение, обозначающее нет значения
x = undefined;           // Особое значение, подобно значению null
// Наиболее важным типом данных в JavaScript являются объекты
var book = {             // Объект - это коллекция пар имя/значение или отображения строки в значение
    topic: "JavaScript", // Объекты заключаются в фигурные скобки, свойство 'topic' имеет значение 'JavaScript'
    fat: true            // Свойство 'fat' имеет значение 'true'
}                        // Доступ к свойствам объектов выполняется с помощью . или []
book.topic               // => "JavaScript"
book["fat"]              // => true: другой способ получить значение свойства
book.author = "Flanagan" // Создать новое свойство присваниванием.
book.contents = {};      // {} - пустой объект без свойств
// JavaScript поддерживает массивы (списки с числовыми индексами) значений:
var primes = [2, 3, 5, 7]; // Массив из четырех значений
primes[0];                 // => 2; первый элемент массива (с индексом 0)
primes.length;             // => 4; количество элементов в массиве
primes[primes.length-1];   // => 7; последний элемент массива
primes[4] = 9;             // Добавить новый элемент присваиванием
primes[4] = 11;            // Или изменить значение имеющегося элемента
var empty = [];            // [] пустой массив без элементов
empty.length               // => 0
// Массивы могут хранить другие массивы и объекты:
var points = [             // Массив c 2 элементами
    {x:0, y:0},            // Каждый элемент это объект
    {x:1, y:1}
]
// Выражения инициализации
var data = {                // Объект с 2 свойствами
    trial1: [[1,2], [3,4]], // Значение каждого свойства - это массив
    trial2: [[2,3], [4,5]]  // Элементами массива являются массивы
}
// Функция – это именованный и параметризованный блок программного кода JavaScript, который определяется один раз, а использоваться может многократно.
function plus1(x) {
    return x + 1;
}
// При объединении функций с объектами получаются методы
var a = [];
a.push(1,2,3);
a.reverse();
// Можно определять собственные методы. Ключевое слово this ссылается на объект, в котором определен метод
// в данном случае на массив points
var points = [
    {x:0, y:0},
    {x:1, y:1}
];
points.dist = function() {
    var p1 = this[0];
    var p2 = this[1];
    var a = p2.x - p1.x;
    var b = p2.y - p1.y;
    return Math.sqrt(a*a + b*b);
};
points.dist();